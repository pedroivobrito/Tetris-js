{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { createStage } from \"../gameHelpers\";\nexport const useStage = (player, resetPlayer) => {\n  _s();\n  const [stage, setStage] = useState(createStage());\n  useEffect(() => {\n    const updateStage = prevStage => {\n      const newStage = prevStage.map(row => row.map(cell => cell[1] === 'clear' ? [0, 'clear'] : cell));\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [value, `${player.collided ? 'merged' : 'clear'}`];\n          }\n        });\n      });\n    };\n    setStage(prev => updateStage(prev));\n  }, [player.collided, player.pos.x, player.pos.y, player.tetromino]);\n  return [stage, setStage];\n};\n_s(useStage, \"5P+otx0I7S1W+XNBDZZ95jKxV+k=\");","map":{"version":3,"names":["useEffect","useState","createStage","useStage","player","resetPlayer","_s","stage","setStage","updateStage","prevStage","newStage","map","row","cell","tetromino","forEach","y","value","x","pos","collided","prev"],"sources":["C:/Users/pedro/Documents/Projetos/Tetris/react-tetris/src/hooks/useStage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { createStage } from \"../gameHelpers\";\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n    const [stage, setStage] = useState(createStage());\r\n\r\n    useEffect(() => {\r\n        const updateStage = prevStage => {\r\n            const newStage = prevStage.map(row =>\r\n                    row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\r\n                );\r\n\r\n            player.tetromino.forEach((row, y) => {\r\n                row.forEach((value, x) => {\r\n                    if(value !== 0) {\r\n                        newStage[y + player.pos.y][x + player.pos.x] = [\r\n                            value,\r\n                            `${player.collided ? 'merged' : 'clear'}`\r\n                        ]\r\n                    }\r\n                })\r\n            });\r\n        };\r\n\r\n        setStage(prev => updateStage(prev));\r\n    }, [player.collided, player.pos.x, player.pos.y, player.tetromino])\r\n\r\n    return [stage, setStage];\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAO,MAAMC,QAAQ,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAGC,SAAS,IAAI;MAC7B,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAACC,GAAG,IAC1BA,GAAG,CAACD,GAAG,CAACE,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,GAAGA,IAAK,CAC/D,CAAC;MAELV,MAAM,CAACW,SAAS,CAACC,OAAO,CAAC,CAACH,GAAG,EAAEI,CAAC,KAAK;QACjCJ,GAAG,CAACG,OAAO,CAAC,CAACE,KAAK,EAAEC,CAAC,KAAK;UACtB,IAAGD,KAAK,KAAK,CAAC,EAAE;YACZP,QAAQ,CAACM,CAAC,GAAGb,MAAM,CAACgB,GAAG,CAACH,CAAC,CAAC,CAACE,CAAC,GAAGf,MAAM,CAACgB,GAAG,CAACD,CAAC,CAAC,GAAG,CAC3CD,KAAK,EACJ,GAAEd,MAAM,CAACiB,QAAQ,GAAG,QAAQ,GAAG,OAAQ,EAAC,CAC5C;UACL;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;IAEDb,QAAQ,CAACc,IAAI,IAAIb,WAAW,CAACa,IAAI,CAAC,CAAC;EACvC,CAAC,EAAE,CAAClB,MAAM,CAACiB,QAAQ,EAAEjB,MAAM,CAACgB,GAAG,CAACD,CAAC,EAAEf,MAAM,CAACgB,GAAG,CAACH,CAAC,EAAEb,MAAM,CAACW,SAAS,CAAC,CAAC;EAEnE,OAAO,CAACR,KAAK,EAAEC,QAAQ,CAAC;AAC5B,CAAC;AAAAF,EAAA,CAzBYH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}