{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { createStage } from \"../gameHelpers\";\nexport const useStage = (player, resetPlayer) => {\n  _s();\n  const [stage, setStage] = useState(createStage());\n  useEffect(() => {\n    const updateStage = prevStage => {\n      const newStage = prevStage.map(row => row.map(cell => cell[1] === 'clear' ? [0, 'clear'] : cell));\n    };\n    setStage(prev => updateStage(prev));\n  }, []);\n  return [stage, setStage];\n};\n_s(useStage, \"5P+otx0I7S1W+XNBDZZ95jKxV+k=\");","map":{"version":3,"names":["useEffect","useState","createStage","useStage","player","resetPlayer","_s","stage","setStage","updateStage","prevStage","newStage","map","row","cell","prev"],"sources":["C:/Users/pedro/Documents/Projetos/Tetris/react-tetris/src/hooks/useStage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { createStage } from \"../gameHelpers\";\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n    const [stage, setStage] = useState(createStage());\r\n\r\n    useEffect(() => {\r\n        const updateStage = prevStage => {\r\n            const newStage = prevStage.map(row =>\r\n                    row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\r\n                );\r\n        };\r\n\r\n        setStage(prev => updateStage(prev));\r\n    }, [])\r\n\r\n    return [stage, setStage];\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAO,MAAMC,QAAQ,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAGC,SAAS,IAAI;MAC7B,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAACC,GAAG,IAC1BA,GAAG,CAACD,GAAG,CAACE,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,GAAGA,IAAK,CAC/D,CAAC;IACT,CAAC;IAEDN,QAAQ,CAACO,IAAI,IAAIN,WAAW,CAACM,IAAI,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACR,KAAK,EAAEC,QAAQ,CAAC;AAC5B,CAAC;AAAAF,EAAA,CAdYH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}